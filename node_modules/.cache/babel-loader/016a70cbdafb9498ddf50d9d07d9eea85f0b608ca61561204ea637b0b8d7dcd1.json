{"ast":null,"code":"import { useRef as $jtQ6z$useRef } from \"react\";\n\n/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /* eslint-disable rulesdir/pure-render */\nfunction $5a387cc49350e6db$export$722debc0e56fea39(value, isEqual) {\n  // Using a ref during render is ok here because it's only an optimization – both values are equivalent.\n  // If a render is thrown away, it'll still work the same no matter if the next render is the same or not.\n  let lastValue = (0, $jtQ6z$useRef)(null);\n  if (value && lastValue.current && isEqual(value, lastValue.current)) value = lastValue.current;\n  lastValue.current = value;\n  return value;\n}\nexport { $5a387cc49350e6db$export$722debc0e56fea39 as useDeepMemo };","map":{"version":3,"names":["useRef","$jtQ6z$useRef","$5a387cc49350e6db$export$722debc0e56fea39","value","isEqual","lastValue","current","useDeepMemo"],"sources":["/Users/development/Downloads/wastewise-master/node_modules/@react-aria/utils/dist/useDeepMemo.mjs"],"sourcesContent":["import {useRef as $jtQ6z$useRef} from \"react\";\n\n/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /* eslint-disable rulesdir/pure-render */ \nfunction $5a387cc49350e6db$export$722debc0e56fea39(value, isEqual) {\n    // Using a ref during render is ok here because it's only an optimization – both values are equivalent.\n    // If a render is thrown away, it'll still work the same no matter if the next render is the same or not.\n    let lastValue = (0, $jtQ6z$useRef)(null);\n    if (value && lastValue.current && isEqual(value, lastValue.current)) value = lastValue.current;\n    lastValue.current = value;\n    return value;\n}\n\n\nexport {$5a387cc49350e6db$export$722debc0e56fea39 as useDeepMemo};\n//# sourceMappingURL=useDeepMemo.mjs.map\n"],"mappings":"AAAA,SAAQA,MAAM,IAAIC,aAAa,QAAO,OAAO;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAVA,CAUI;AACJ,SAASC,yCAAyCA,CAACC,KAAK,EAAEC,OAAO,EAAE;EAC/D;EACA;EACA,IAAIC,SAAS,GAAG,CAAC,CAAC,EAAEJ,aAAa,EAAE,IAAI,CAAC;EACxC,IAAIE,KAAK,IAAIE,SAAS,CAACC,OAAO,IAAIF,OAAO,CAACD,KAAK,EAAEE,SAAS,CAACC,OAAO,CAAC,EAAEH,KAAK,GAAGE,SAAS,CAACC,OAAO;EAC9FD,SAAS,CAACC,OAAO,GAAGH,KAAK;EACzB,OAAOA,KAAK;AAChB;AAGA,SAAQD,yCAAyC,IAAIK,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}