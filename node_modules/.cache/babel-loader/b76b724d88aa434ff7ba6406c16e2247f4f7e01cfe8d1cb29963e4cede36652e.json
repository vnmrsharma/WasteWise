{"ast":null,"code":"import { getFocusableTreeWalker as $9bf71ea28793e738$export$2d6ec8fc375ceafa } from \"./FocusScope.mjs\";\nimport { useState as $hGAaG$useState } from \"react\";\nimport { useLayoutEffect as $hGAaG$useLayoutEffect } from \"@react-aria/utils\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $83013635b024ae3d$export$eac1895992b9f3d6(ref, options) {\n  let isDisabled = options === null || options === void 0 ? void 0 : options.isDisabled;\n  let [hasTabbableChild, setHasTabbableChild] = (0, $hGAaG$useState)(false);\n  (0, $hGAaG$useLayoutEffect)(() => {\n    if ((ref === null || ref === void 0 ? void 0 : ref.current) && !isDisabled) {\n      let update = () => {\n        if (ref.current) {\n          let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current, {\n            tabbable: true\n          });\n          setHasTabbableChild(!!walker.nextNode());\n        }\n      };\n      update();\n      // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\n      let observer = new MutationObserver(update);\n      observer.observe(ref.current, {\n        subtree: true,\n        childList: true,\n        attributes: true,\n        attributeFilter: [\"tabIndex\", \"disabled\"]\n      });\n      return () => {\n        // Disconnect mutation observer when a React update occurs on the top-level component\n        // so we update synchronously after re-rendering. Otherwise React will emit act warnings\n        // in tests since mutation observers fire asynchronously. The mutation observer is necessary\n        // so we also update if a child component re-renders and adds/removes something tabbable.\n        observer.disconnect();\n      };\n    }\n  });\n  return isDisabled ? false : hasTabbableChild;\n}\nexport { $83013635b024ae3d$export$eac1895992b9f3d6 as useHasTabbableChild };","map":{"version":3,"names":["getFocusableTreeWalker","$9bf71ea28793e738$export$2d6ec8fc375ceafa","useState","$hGAaG$useState","useLayoutEffect","$hGAaG$useLayoutEffect","$83013635b024ae3d$export$eac1895992b9f3d6","ref","options","isDisabled","hasTabbableChild","setHasTabbableChild","current","update","walker","tabbable","nextNode","observer","MutationObserver","observe","subtree","childList","attributes","attributeFilter","disconnect","useHasTabbableChild"],"sources":["/Users/development/Downloads/wastewise-master/node_modules/@react-aria/focus/dist/useHasTabbableChild.mjs"],"sourcesContent":["import {getFocusableTreeWalker as $9bf71ea28793e738$export$2d6ec8fc375ceafa} from \"./FocusScope.mjs\";\nimport {useState as $hGAaG$useState} from \"react\";\nimport {useLayoutEffect as $hGAaG$useLayoutEffect} from \"@react-aria/utils\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\nfunction $83013635b024ae3d$export$eac1895992b9f3d6(ref, options) {\n    let isDisabled = options === null || options === void 0 ? void 0 : options.isDisabled;\n    let [hasTabbableChild, setHasTabbableChild] = (0, $hGAaG$useState)(false);\n    (0, $hGAaG$useLayoutEffect)(()=>{\n        if ((ref === null || ref === void 0 ? void 0 : ref.current) && !isDisabled) {\n            let update = ()=>{\n                if (ref.current) {\n                    let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current, {\n                        tabbable: true\n                    });\n                    setHasTabbableChild(!!walker.nextNode());\n                }\n            };\n            update();\n            // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\n            let observer = new MutationObserver(update);\n            observer.observe(ref.current, {\n                subtree: true,\n                childList: true,\n                attributes: true,\n                attributeFilter: [\n                    \"tabIndex\",\n                    \"disabled\"\n                ]\n            });\n            return ()=>{\n                // Disconnect mutation observer when a React update occurs on the top-level component\n                // so we update synchronously after re-rendering. Otherwise React will emit act warnings\n                // in tests since mutation observers fire asynchronously. The mutation observer is necessary\n                // so we also update if a child component re-renders and adds/removes something tabbable.\n                observer.disconnect();\n            };\n        }\n    });\n    return isDisabled ? false : hasTabbableChild;\n}\n\n\nexport {$83013635b024ae3d$export$eac1895992b9f3d6 as useHasTabbableChild};\n//# sourceMappingURL=useHasTabbableChild.mjs.map\n"],"mappings":"AAAA,SAAQA,sBAAsB,IAAIC,yCAAyC,QAAO,kBAAkB;AACpG,SAAQC,QAAQ,IAAIC,eAAe,QAAO,OAAO;AACjD,SAAQC,eAAe,IAAIC,sBAAsB,QAAO,mBAAmB;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,yCAAyCA,CAACC,GAAG,EAAEC,OAAO,EAAE;EAC7D,IAAIC,UAAU,GAAGD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACC,UAAU;EACrF,IAAI,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG,CAAC,CAAC,EAAER,eAAe,EAAE,KAAK,CAAC;EACzE,CAAC,CAAC,EAAEE,sBAAsB,EAAE,MAAI;IAC5B,IAAI,CAACE,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,GAAG,CAACK,OAAO,KAAK,CAACH,UAAU,EAAE;MACxE,IAAII,MAAM,GAAGA,CAAA,KAAI;QACb,IAAIN,GAAG,CAACK,OAAO,EAAE;UACb,IAAIE,MAAM,GAAG,CAAC,CAAC,EAAEb,yCAAyC,EAAEM,GAAG,CAACK,OAAO,EAAE;YACrEG,QAAQ,EAAE;UACd,CAAC,CAAC;UACFJ,mBAAmB,CAAC,CAAC,CAACG,MAAM,CAACE,QAAQ,CAAC,CAAC,CAAC;QAC5C;MACJ,CAAC;MACDH,MAAM,CAAC,CAAC;MACR;MACA,IAAII,QAAQ,GAAG,IAAIC,gBAAgB,CAACL,MAAM,CAAC;MAC3CI,QAAQ,CAACE,OAAO,CAACZ,GAAG,CAACK,OAAO,EAAE;QAC1BQ,OAAO,EAAE,IAAI;QACbC,SAAS,EAAE,IAAI;QACfC,UAAU,EAAE,IAAI;QAChBC,eAAe,EAAE,CACb,UAAU,EACV,UAAU;MAElB,CAAC,CAAC;MACF,OAAO,MAAI;QACP;QACA;QACA;QACA;QACAN,QAAQ,CAACO,UAAU,CAAC,CAAC;MACzB,CAAC;IACL;EACJ,CAAC,CAAC;EACF,OAAOf,UAAU,GAAG,KAAK,GAAGC,gBAAgB;AAChD;AAGA,SAAQJ,yCAAyC,IAAImB,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}