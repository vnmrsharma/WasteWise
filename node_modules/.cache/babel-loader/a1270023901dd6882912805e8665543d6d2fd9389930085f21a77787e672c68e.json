{"ast":null,"code":"import { usePress as $f6c31cce2adf654f$export$45712eceda6fad21 } from \"./usePress.mjs\";\nimport { useGlobalListeners as $4k2kv$useGlobalListeners, useDescription as $4k2kv$useDescription, mergeProps as $4k2kv$mergeProps } from \"@react-aria/utils\";\nimport { useRef as $4k2kv$useRef } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;\nfunction $8a26561d2877236e$export$c24ed0104d07eab9(props) {\n  let {\n    isDisabled: isDisabled,\n    onLongPressStart: onLongPressStart,\n    onLongPressEnd: onLongPressEnd,\n    onLongPress: onLongPress,\n    threshold = $8a26561d2877236e$var$DEFAULT_THRESHOLD,\n    accessibilityDescription: accessibilityDescription\n  } = props;\n  const timeRef = (0, $4k2kv$useRef)();\n  let {\n    addGlobalListener: addGlobalListener,\n    removeGlobalListener: removeGlobalListener\n  } = (0, $4k2kv$useGlobalListeners)();\n  let {\n    pressProps: pressProps\n  } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({\n    isDisabled: isDisabled,\n    onPressStart(e) {\n      e.continuePropagation();\n      if (e.pointerType === \"mouse\" || e.pointerType === \"touch\") {\n        if (onLongPressStart) onLongPressStart({\n          ...e,\n          type: \"longpressstart\"\n        });\n        timeRef.current = setTimeout(() => {\n          // Prevent other usePress handlers from also handling this event.\n          e.target.dispatchEvent(new PointerEvent(\"pointercancel\", {\n            bubbles: true\n          }));\n          if (onLongPress) onLongPress({\n            ...e,\n            type: \"longpress\"\n          });\n          timeRef.current = undefined;\n        }, threshold);\n        // Prevent context menu, which may be opened on long press on touch devices\n        if (e.pointerType === \"touch\") {\n          let onContextMenu = e => {\n            e.preventDefault();\n          };\n          addGlobalListener(e.target, \"contextmenu\", onContextMenu, {\n            once: true\n          });\n          addGlobalListener(window, \"pointerup\", () => {\n            // If no contextmenu event is fired quickly after pointerup, remove the handler\n            // so future context menu events outside a long press are not prevented.\n            setTimeout(() => {\n              removeGlobalListener(e.target, \"contextmenu\", onContextMenu);\n            }, 30);\n          }, {\n            once: true\n          });\n        }\n      }\n    },\n    onPressEnd(e) {\n      if (timeRef.current) clearTimeout(timeRef.current);\n      if (onLongPressEnd && (e.pointerType === \"mouse\" || e.pointerType === \"touch\")) onLongPressEnd({\n        ...e,\n        type: \"longpressend\"\n      });\n    }\n  });\n  let descriptionProps = (0, $4k2kv$useDescription)(onLongPress && !isDisabled ? accessibilityDescription : undefined);\n  return {\n    longPressProps: (0, $4k2kv$mergeProps)(pressProps, descriptionProps)\n  };\n}\nexport { $8a26561d2877236e$export$c24ed0104d07eab9 as useLongPress };","map":{"version":3,"names":["usePress","$f6c31cce2adf654f$export$45712eceda6fad21","useGlobalListeners","$4k2kv$useGlobalListeners","useDescription","$4k2kv$useDescription","mergeProps","$4k2kv$mergeProps","useRef","$4k2kv$useRef","$8a26561d2877236e$var$DEFAULT_THRESHOLD","$8a26561d2877236e$export$c24ed0104d07eab9","props","isDisabled","onLongPressStart","onLongPressEnd","onLongPress","threshold","accessibilityDescription","timeRef","addGlobalListener","removeGlobalListener","pressProps","onPressStart","e","continuePropagation","pointerType","type","current","setTimeout","target","dispatchEvent","PointerEvent","bubbles","undefined","onContextMenu","preventDefault","once","window","onPressEnd","clearTimeout","descriptionProps","longPressProps","useLongPress"],"sources":["/Users/development/Downloads/wastewise-master/node_modules/@react-aria/interactions/dist/useLongPress.mjs"],"sourcesContent":["import {usePress as $f6c31cce2adf654f$export$45712eceda6fad21} from \"./usePress.mjs\";\nimport {useGlobalListeners as $4k2kv$useGlobalListeners, useDescription as $4k2kv$useDescription, mergeProps as $4k2kv$mergeProps} from \"@react-aria/utils\";\nimport {useRef as $4k2kv$useRef} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\nconst $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;\nfunction $8a26561d2877236e$export$c24ed0104d07eab9(props) {\n    let { isDisabled: isDisabled, onLongPressStart: onLongPressStart, onLongPressEnd: onLongPressEnd, onLongPress: onLongPress, threshold: threshold = $8a26561d2877236e$var$DEFAULT_THRESHOLD, accessibilityDescription: accessibilityDescription } = props;\n    const timeRef = (0, $4k2kv$useRef)();\n    let { addGlobalListener: addGlobalListener, removeGlobalListener: removeGlobalListener } = (0, $4k2kv$useGlobalListeners)();\n    let { pressProps: pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({\n        isDisabled: isDisabled,\n        onPressStart (e) {\n            e.continuePropagation();\n            if (e.pointerType === \"mouse\" || e.pointerType === \"touch\") {\n                if (onLongPressStart) onLongPressStart({\n                    ...e,\n                    type: \"longpressstart\"\n                });\n                timeRef.current = setTimeout(()=>{\n                    // Prevent other usePress handlers from also handling this event.\n                    e.target.dispatchEvent(new PointerEvent(\"pointercancel\", {\n                        bubbles: true\n                    }));\n                    if (onLongPress) onLongPress({\n                        ...e,\n                        type: \"longpress\"\n                    });\n                    timeRef.current = undefined;\n                }, threshold);\n                // Prevent context menu, which may be opened on long press on touch devices\n                if (e.pointerType === \"touch\") {\n                    let onContextMenu = (e)=>{\n                        e.preventDefault();\n                    };\n                    addGlobalListener(e.target, \"contextmenu\", onContextMenu, {\n                        once: true\n                    });\n                    addGlobalListener(window, \"pointerup\", ()=>{\n                        // If no contextmenu event is fired quickly after pointerup, remove the handler\n                        // so future context menu events outside a long press are not prevented.\n                        setTimeout(()=>{\n                            removeGlobalListener(e.target, \"contextmenu\", onContextMenu);\n                        }, 30);\n                    }, {\n                        once: true\n                    });\n                }\n            }\n        },\n        onPressEnd (e) {\n            if (timeRef.current) clearTimeout(timeRef.current);\n            if (onLongPressEnd && (e.pointerType === \"mouse\" || e.pointerType === \"touch\")) onLongPressEnd({\n                ...e,\n                type: \"longpressend\"\n            });\n        }\n    });\n    let descriptionProps = (0, $4k2kv$useDescription)(onLongPress && !isDisabled ? accessibilityDescription : undefined);\n    return {\n        longPressProps: (0, $4k2kv$mergeProps)(pressProps, descriptionProps)\n    };\n}\n\n\nexport {$8a26561d2877236e$export$c24ed0104d07eab9 as useLongPress};\n//# sourceMappingURL=useLongPress.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}